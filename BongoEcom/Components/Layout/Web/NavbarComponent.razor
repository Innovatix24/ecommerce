@using Application.Features.CompanyInfoes.Queries
@using BongoEcom.Services

@inject AuthService Auth;
@inject CompanyInfoService companyService

<style>
    .nav-green {
        background-color: #ff9f00;
    }

        .nav-green a {
            color: white !important;
            font-weight: bold;
        }
</style>

<nav class="navbar navbar-expand-lg nav-green px-3">
    <div class="container-fluid">
        <button class="navbar-toggler" data-bs-toggle="collapse" data-bs-target="#navMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navMenu">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
@*                 <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" data-bs-toggle="dropdown">ALL CATEGORIES</a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#">Category 1</a></li>
                        <li><a class="dropdown-item" href="#">Category 2</a></li>
                    </ul>
                </li> *@
                <li class="nav-item"><NavLink class="nav-link" href="/">HOME</NavLink></li>
                @* <li class="nav-item"><NavLink class="nav-link" href="shop/products">SHOP</NavLink></li> *@
                @* <li class="nav-item"><a class="nav-link" href="#">WISHLIST</a></li> *@
                @* <li class="nav-item"><a class="nav-link" href="#">CONTACT</a></li> *@
                @if (Auth.UserSession is not null)
                {
                    <li class="nav-item"><a class="nav-link" href="@(Auth.UserSession.Role == "Admin" ? "admin/dashboard" : "/dashboard")">DASHBOARD</a></li>
                }
            </ul>
            <div class="text-white d-flex align-items-center gap-2">
                <i class="fas fa-envelope"></i> CONTACT: <strong>@CompanyInfo.MobileNumber</strong>
            </div>
        </div>
    </div>
</nav>

@code {

    CompanyInfoDto CompanyInfo = new();
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await companyService.Load();
            CompanyInfo = companyService.CompanyInfo ?? new();
            StateHasChanged();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    protected override void OnInitialized()
    {
        Auth.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        Auth.OnChange -= StateHasChanged;
    }
}