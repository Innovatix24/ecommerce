@page "/admin/categories";
@using Application.Features.Categories.DTOs
@using BongoEcom.Components.Common
@using Icons = Microsoft.FluentUI.AspNetCore.Components.Icons;
@rendermode InteractiveServer
@inject IDialogService DialogService;

<div class="card">
    <div class="card-body">
        <div style="display:flex; justify-content:space-between;">
            <h3>Category List</h3>
            <FluentButton @onclick=@(() => CreateCategory()) Color="Color.Error">Create Category</FluentButton>
        </div>
        @* <button @onclick=@(() => Navigation.NavigateTo("categories/create"))>Create Category</button> *@

        @if (IsLoading)
        {
            <Loading></Loading>
        }
        else if (Categories?.Count == 0)
        {
            <p><em>No categories found.</em></p>
        }
        else
        {
            <div style="height:85vh;">
                <FluentDataGrid Items="Categories?.AsQueryable()"
                                TGridItem="CategoryDto"
                                Pagination="@pagination"
                                RowSize="@rowSize"
                                AutoItemsPerPage="true"
                                Style="overflow-y:hidden;">
                    <PropertyColumn Width="60px" Property="@(c => c.Id)" Sortable="true" />
                    <PropertyColumn Property="@(c => c.Name)" Sortable="true" />
                    <PropertyColumn Property="@(c => c.Description)" Sortable="true" />
                    <TemplateColumn Title="Action">
                        <div style="display:flex;">
                            <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())"
                                          Title="Edit"
                                          OnClick="@(() => EditCategory(context))" />
                            <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())"
                                          Title="Delete"
                                          Color="Color.Error"
                                          OnClick="@(() => DeleteCategory(context.Id))" />
                        </div>
                    </TemplateColumn>
                </FluentDataGrid>
                <FluentPaginator State="@pagination" />
            </div>
        }

        @if (!string.IsNullOrEmpty(Message))
        {
            <div class="alert alert-info mt-3">@Message</div>
        }
    </div>
</div>


@code {
    DataGridRowSize rowSize = DataGridRowSize.Medium;
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
}

