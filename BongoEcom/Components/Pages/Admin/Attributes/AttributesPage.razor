@* @page "/admin/attributes"; *@
@using Application.Features.Attributes.DTOs
@using Application.Features.Attributes.Queries;
@rendermode InteractiveServer

@inject IDialogService DialogService;


@attribute [Authorize(Roles = "Admin,SuperAdmin")]

<div class="card">
    <div class="card-body">
        
        @if (IsLoading)
        {
            <p><em>Loading...</em></p>
        }
        else if (Attributes?.Count == 0)
        {
            <p><em>No categories found.</em></p>
        }
        else
        {
            <div class="row" style="height:85vh;">
                @* <div class="col-md-4">
                    <div style="display:flex; justify-content:space-between;">
                        <h3>Attribute Groups</h3>
                        <FluentButton @onclick=@CreateGroup Color="White" BackgroundColor="Teal">Create Group</FluentButton>
                    </div>
                    <FluentDataGrid Items="Groups?.AsQueryable()"
                                    TGridItem="AttributeGroupDto"
                                    RowSize="@rowSize"
                                    AutoItemsPerPage="true"
                                    Style="overflow-y:hidden;">
                        <TemplateColumn Width="60px" Title="Sl">
                            <p>@(Groups?.IndexOf(context) + 1)</p>
                        </TemplateColumn>
                        <PropertyColumn Property="@(c => c.Name)" Sortable="true" />
                        <TemplateColumn Title="Action">
                            <div style="display:flex;">
                                <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())"
                                              Title="Edit"
                                              OnClick="@(() => EditGroup(context))" />
                                <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())"
                                              Title="Delete"
                                              Color="Color.Error"
                                              OnClick="@(() => DeleteAttribute(context.Id))" />
                            </div>
                        </TemplateColumn>
                    </FluentDataGrid>
                </div> *@
                <div class="col-md-8">
                    <div style="display:flex; justify-content:space-between;">
                        <h3>Attribute List</h3>
                        <FluentButton OnClick=@CreateItem Color="White" BackgroundColor="Teal">Create Attribute</FluentButton>
                    </div>
                    <FluentDataGrid Items="Attributes?.AsQueryable()"
                                    TGridItem="AttributeDto"
                                    Pagination="@pagination"
                                    RowSize="@rowSize"
                                    AutoItemsPerPage="true"
                                    Style="overflow-y:hidden;">
                        <TemplateColumn Width="60px" Title="Sl">
                            <p>@(Attributes?.IndexOf(context) + 1)</p>
                        </TemplateColumn>
                        <PropertyColumn Property="@(c => c.Name)" Sortable="true" />
                        <TemplateColumn Title="Action">
                            <div style="display:flex;">
                                <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())"
                                              Title="Edit"
                                              OnClick="@(() => EditItem(context))" />
                                <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())"
                                              Title="Delete"
                                              Color="Color.Error"
                                              OnClick="@(() => DeleteAttribute(context.Id))" />
                            </div>
                        </TemplateColumn>
                    </FluentDataGrid>
                    <FluentPaginator State="@pagination" />
                </div>
            </div>
        }
    </div>
</div>


