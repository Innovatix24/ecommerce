@page "/admin/coupons"
@using Application.Features.Coupons.Commands
@using Application.Features.Orders.Queries
@using BongoEcom.Components.Common
@inject NavigationManager Nav

@rendermode InteractiveServer

@* @attribute [Authorize(Roles = "Admin,SuperAdmin")] *@

<div class="card">
    <div class="card-body">

        <div class="d-flex justify-content-between">
            <h3 class="text-xl font-bold mb-4">Delivery Charges</h3>
            <button class="mt-4 px-4 py-2 bg-success text-white rounded border-0" @onclick="CreateNew">+ Add Coupon</button>
        </div>

        @if (loading)
        {
            <Loading/>
        }
        else
        {
            <FluentDataGrid Items="coupons?.AsQueryable()"
                            TGridItem="CouponDto"
            RowSize="@rowSize"
            AutoItemsPerPage="true"
            Style="overflow-y:hidden;">
                <TemplateColumn Width="60px" Title="Sl">
                    <p>@(coupons?.IndexOf(context) + 1)</p>
                </TemplateColumn>
                @* <PropertyColumn Width="60px" Property="@(c => c.Id)" Sortable="true" /> *@
                <PropertyColumn Property="@(c => c.Code)" Sortable="true" />
                <PropertyColumn Property="@(c => c.DiscountType)" Sortable="true" />
                <PropertyColumn Property="@(c => $"{c.DiscountValue}")" Title="Amount" Align="Align.End"/>
                <PropertyColumn Property="@(c => c.MaxUsageCount)" Sortable="true" />
                <PropertyColumn Property="@(c => c.UsageCount)" Sortable="true" />
                <TemplateColumn Title="Status">
                    <p>@(context.IsActive ? "✅" : "❌")</p>
                </TemplateColumn>
                <TemplateColumn Title="Expire Date">
                    <p>@(context.ExpiryDate?.ToShortDateString() ?? "-")</p>
                </TemplateColumn>

                <TemplateColumn Title="Action">
                    <div style="display:flex;">
                        <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())"
                        Title="Edit"
                        OnClick="@(() => Edit(context.Id))" />
                        <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())"
                        Title="Delete"
                        Color="Color.Error"
                        OnClick="@(() => Delete(context.Id))" />
                    </div>
                </TemplateColumn>
            </FluentDataGrid>

        }
    </div>
</div>

@code {
    List<CouponDto> coupons = new();

    DataGridRowSize rowSize = DataGridRowSize.Medium;
    private List<DeliveryChargeDto> deliveryCharges = new();

    void Edit(int id) => Nav.NavigateTo($"/admin/coupons/edit/{id}");
    
    private async Task Delete(short id)
    {
        var confirmed = await UIService.ShowConfirmationAsync("confirm", "Are you sure you want to delete this delivery charge?");

        if (!confirmed) return;

        var response = await _mediator.Send(new DeleteCouponCommand(id));
        if (response.IsSuccess)
        {
            await LoadData();
        }
    }
    void CreateNew() => Nav.NavigateTo("/admin/coupons/create");
}
