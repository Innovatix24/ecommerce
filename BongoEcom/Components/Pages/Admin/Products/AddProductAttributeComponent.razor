@using Application.Features.Attributes.DTOs
@using Application.Features.Products.Commands
@using Application.Features.Attributes.Queries;
@using Application.Features.Products.DTOs
@using BongoEcom.Components.Common
@using BongoEcom.Services
@rendermode InteractiveServer
@inject IDialogService dialogueService

@* @inject JSHelper js *@

<FluentDialogFooter>
    <FluentButton BackgroundColor="Green" Appearance="Appearance.Accent" OnClick="@AddItemAsync">Save</FluentButton>
    <FluentButton BackgroundColor="OrangeRed" Appearance="Appearance.Accent" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>

<FluentDialogBody>
    <div style="min-height:300px;">
        <div class="mb-3">
            <FluentCombobox Items=@Groups
                            Width="400px"
                            OptionText="@(i => i.Name)"
                            Label="Attribute Group"
                            SelectedOptionChanged="@(async x => SelectAttributeGroup(x))"
                            Height="200px"
                            Disabled=@(Groups == null)
                            Autocomplete="ComboboxAutocomplete.Both"
                            TOption="AttributeGroupDto" />
        </div>
        <div>
            <FluentCombobox Items=@FilteredAttributes
                            Width="400px"
                            OptionText="@(i => i.Name)"
                            Label="Attribute"
                            SelectedOption="@Attribute"
                            SelectedOptionChanged="@(async x => SelectAttribute(x))"
                            Height="200px"
                            Disabled=@(FilteredAttributes == null)
                            Autocomplete="ComboboxAutocomplete.Both"
                            TOption="AttributeDto" />
        </div>

        @if (Attribute != null && Attribute.Values.Any())
        {
            <br />
            <p>Select Attribute Values</p>
            <div>
                <FluentStack Style="margin: 20px;" Orientation="Orientation.Vertical">
                    @foreach (var option in Attribute.Values)
                    {
                        <FluentCheckbox Label="@($"{option.Value}")"
                                        @bind-Value:get="option.IsSelected"
                                        @bind-Value:set="c => OnOptionSelected(option, c)" />
                    }
                </FluentStack>
            </div>
        }
    </div>
</FluentDialogBody>

@code{
    ProductAttributeValueDto value = new();
    List<ProductAttributeValueDto> Values = new();
    List<AttributeDto> Attributes = new();
    List<AttributeDto> FilteredAttributes = new();

    AttributeDto Attribute = new();

    private void SelectAttribute(AttributeDto item)
    {
        Attribute = item;
    }

    public void OnOptionSelected(AttributeValueDto value, bool isSelected)
    {
        value.IsSelected = isSelected;
    }

    private async void AddItemAsync()
    {
        if (Values.Count == 0 && Attribute != null && Attribute.Values.Any())
        {
            Values = Attribute.Values
            .Where(x=> x.IsSelected)
            .Select(x => new ProductAttributeValueDto
            {
                Value = x.Value
            }).ToList();
        }

        if(Content == null || Content.Id == 0) 
        {
            Content = new();
            Content.AttributeId = Attribute.Id;
            Content.Name = Attribute.Name;
            Content.Values = Values;
        }
        else
        {
            Content.Values = Values;
        }

        await Dialog.CloseAsync(Content);
    }
    private void CancelAsync()
    {

    }

    private void RemoveTag(ProductAttributeValueDto item)
    {
        Values.Remove(item);
    }

    private void HandleValueInput(ChangeEventArgs e)
    {
        if (e.Value is null) return;
        value.Value = e.Value.ToString();
    }
    private void HandleValueKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Values.Add(value);
            value = new();
        }
    }
}